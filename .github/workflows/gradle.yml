name: Dev Builds

on:
  push:
    paths:
      - "*.gradle"
      - "gradle.properties"
      - "src/**"
      - "versions/**"
      - ".github/**"
  pull_request:

jobs:
  matrix_prep:
    uses: ./.github/workflows/matrix_prep.yml

  build:
    uses: ./.github/workflows/build.yml
    with:
      mixin_audit: true

  dev_artifacts_reuploads:
    needs:
      - matrix_prep
      - build
    runs-on: ubuntu-latest

    strategy:
      matrix: ${{ fromJson(needs.matrix_prep.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build-artifacts

      - name: Read common properties
        id: properties_g
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: gradle.properties
          properties: 'mod_name mod_version'

      - name: Read version-specific properties
        id: properties_v
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: ${{ format('versions/{0}/gradle.properties', matrix.subproject_dir) }}
          properties: 'minecraft_version game_versions'

      - name: Fix game version
        id: game_versions
        run: |
          # Fixed \n in game_versions isn't parsed by christian-draeger/read-properties as a line separator
          echo 'value<<EOF' >> $GITHUB_OUTPUT
          echo -e "${{ steps.properties_v.outputs.game_versions }}" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Extract and prepare JAR contents
        run: |
          mkdir -p unzipped_contents
          JAR_FILE=$(find build-artifacts/${{ matrix.subproject_dir }}/build/libs/ -name '*.jar' | grep -Ev '(-dev|-sources).jar')
          echo "JAR_FILE=${JAR_FILE}" >> $GITHUB_ENV
          
          if [ -z "$JAR_FILE" ]; then
            echo "No valid JAR file found" >&2
            exit 1
          fi

          JAR_BASENAME=$(basename "$JAR_FILE")
          echo "JAR_BASENAME=${JAR_BASENAME}" >> $GITHUB_ENV

      - name: Upload unzipped contents
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.JAR_BASENAME }}
          path: ${{ env.JAR_FILE }}
